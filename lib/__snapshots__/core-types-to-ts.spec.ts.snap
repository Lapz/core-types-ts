// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`core-types-to-ts complex type 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file is generated by core-types-ts, DO NOT EDIT.
 * For more information, see:
 *  - {@link https://github.com/grantila/core-types-ts}
 */

export declare interface foo {
    bar?: string;
    baz: number | {
        [key: string]: boolean;
    };
    bak: {
        [key: string]: unknown;
    };
    tupleWithAdditionals: [
        string,
        ...number[]
    ];
    tupleWithObjectAdditionals: [
        string,
        ...{
            x?: User;
        }[]
    ];
}
"
`;

exports[`core-types-to-ts should write annotations properly 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file is generated by core-types-ts, DO NOT EDIT.
 * For more information, see:
 *  - {@link https://github.com/grantila/core-types-ts}
 */

/**
 * User type
 *
 * This type holds the user information, such as name
 *
 * @example
 *     \\"{ name: \\\\\\"Joe\\\\\\" }\\"
 *
 * @default
 *     \\"{ user: \\\\\\"\\\\\\" }\\"
 */
export interface User {
    /**
     * The real name
     *
     * Must be a valid name, not *\\\\/
     */
    name: string;
}

// A chat line
export interface ChatLine {
    user: User;
    line: string;
}
"
`;

exports[`core-types-to-ts simple string union of separate types 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file is generated by core-types-ts, DO NOT EDIT.
 * For more information, see:
 *  - {@link https://github.com/grantila/core-types-ts}
 */

export type bar = \\"bar\\";

export type foo = bar | (\\"foo\\" | \\"baz\\");
"
`;

exports[`core-types-to-ts simple string union type as declaration 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file is generated by core-types-ts, DO NOT EDIT.
 * For more information, see:
 *  - {@link https://github.com/grantila/core-types-ts}
 */

export declare type foo = \\"foo\\" | \\"bar\\" | \\"baz\\";
"
`;

exports[`core-types-to-ts simple type 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file is generated by core-types-ts, DO NOT EDIT.
 * For more information, see:
 *  - {@link https://github.com/grantila/core-types-ts}
 */

export type foo = string;
"
`;

exports[`core-types-to-ts simple type as declaration 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file is generated by core-types-ts, DO NOT EDIT.
 * For more information, see:
 *  - {@link https://github.com/grantila/core-types-ts}
 */

export declare type foo = string;
"
`;

exports[`core-types-to-ts used in readme 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file is generated by core-types-ts, DO NOT EDIT.
 * For more information, see:
 *  - {@link https://github.com/grantila/core-types-ts}
 */

/**
 * User type
 *
 * This type holds the user information, such as name
 */
export interface User {
    // The real name
    name: string;
}

// A chat line
export interface ChatLine {
    user: User;
    line: string;
}
"
`;
